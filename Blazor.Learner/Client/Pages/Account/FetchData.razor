@page "/account"
@inject HttpClient client
@inject IJSRuntime js

<h4>
    Accounts
    <a class="btn btn-sm btn-success" href="account/create"><i class="oi oi-plus"></i></a>
</h4>
<br>

<div class="col-md-8" style="padding-left:0px;">
    <div class="input-group">
        <h5 style="padding-top: 6px; padding-right: 14px;" >Search by Local Number :</h5>
        <input type="text" class="form-control"  @bind-value="@searchQuery">
        <span class="input-group-btn">
            <button class="btn btn-primary" type="button" @onclick="@SearchAccounts">
                Search
            </button>
        </span>
    </div><!-- /input-group -->
</div><!-- /.col-lg-6 -->
<br />

@if (accounts == null)
{
    <text>Loading...</text>
}
else if (accounts.Length == 0)
{
    <text>No Records Found.</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Local Number</th>
                <th>IBAN</th>
                <th>Bank Name</th>
                <th>Currency</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Account acc in accounts)
            {
                <tr>
                    <td>@acc.Id</td>
                    <td>@acc.LocalAccountNumber</td>
                    <td>@acc.IBAN</td>
                    <td>@acc.BankName</td>
                    <td>@acc.Currency</td>

                    <td>

                        <a class="btn btn-info" href="view/account/@acc.Id">View</a>
                        <a class="btn btn-success" href="account/edit/@acc.Id">Edit</a>
                        <a class="btn btn-warning" href="transaction/create/@acc.Id">Transaction</a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(acc.Id))">Delete</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}
@code {
    Account[] accounts { get; set; }
    String searchQuery { get; set; } = String.Empty;


    protected async Task SearchAccounts()
    {
        if (searchQuery != null && searchQuery.Length != 0)
            accounts = accounts.Where(a => a.LocalAccountNumber.ToString().Contains(searchQuery)).ToArray();
        else
            accounts = await client.GetFromJsonAsync<Account[]>("api/account");

    }
    protected override async Task OnInitializedAsync()
    {
        accounts = await client.GetFromJsonAsync<Account[]>("api/account");
    }

    async Task Delete(int accountId)
    {
        var acc = accounts.First(x => x.Id == accountId);
        if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {acc.IBAN}'s ({acc.BankName}) Account?"))
        {
            await client.DeleteAsync($"api/account/{accountId}");
            await OnInitializedAsync();
        }
    }
}

